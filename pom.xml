<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.hiwan.web</groupId>
    <artifactId>web-project</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
        <springboot.version>2.4.3</springboot.version>
        <java.version>1.8</java.version>
        <fastjson.version>1.2.46</fastjson.version>
        <springloaded.version>1.2.8.RELEASE</springloaded.version>
        <mysql-connector.version>8.0.19</mysql-connector.version>
        <druid.version>1.1.11</druid.version>
        <HikariCP.version>2.7.8</HikariCP.version>
        <mybatis.spring.boot.version>1.3.1</mybatis.spring.boot.version>
        <pagehelper.version>1.2.3</pagehelper.version>
        <lombok.version>1.18.12</lombok.version>
        <junit.version>4.13</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <mybatis-generator.version>1.3.5</mybatis-generator.version>
        <!-- 打包时，路过测试类-->
        <skipTests>true</skipTests>
        <!-- maven方式跳过maven test, 等同$ mvn package -Dmaven.test.skip=true -->
        <!-- <maven.test.skip>true</maven.test.skip> -->
        <!-- surefire plugin方式跳过maven test， 等同$ mvn package -DskipTests -->
    </properties>
    <modules>
        <module>address-service</module>
        <module>common-utils</module>
    </modules>
    <!-- 公共依赖-->
    <dependencies>
        <dependency>
            <!-- SpringBootStarter ：核心模块，包括自动配置支持、日志和 YAML -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <!-- SpringBootStarterTest ：测试模块，包括 JUnit、Hamcrest、Mockito -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- StarterWeb：添加支持web的模块 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <dependency>
            <!-- FastJson：导入依赖包（注意导入版本）-->
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <dependency>
            <!-- SpringLoaded：代码热加载（防止频繁重启） -->
            <groupId>org.springframework</groupId>
            <artifactId>springloaded</artifactId>
            <version>${springloaded.version}</version>
        </dependency>
        <dependency>
            <!-- Devtools：自动重启（推荐使用） -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- MysqlConnector：导入Mysql驱动包 -->
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector.version}</version>
        </dependency>
        <dependency>
            <!-- Durid：数据库连接池 -->
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <dependency>
            <!-- HiKariCP：号称最快的连接池 -->
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${HikariCP.version}</version>
        </dependency>
        <dependency>
            <!-- MybatisSpring：导入Mybatis持久层框架 -->
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis.spring.boot.version}</version>
        </dependency>
        <dependency>
            <!-- Pagehelper：分页的插件 -->
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${pagehelper.version}</version>
        </dependency>
        <dependency>
            <!-- DataRedis：redis缓存配置 -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <!-- SessionDataRedis：配置Session共享 -->
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>
        <dependency>
            <!-- Lombok：@SL4j配置 -->
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Junit：测试配置 -->
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>
        <dependency>
            <!-- Log4J：测试配置 -->
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-maven-plugin</artifactId>
            <version>${mybatis-generator.version}</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <!-- MyBatisGenerator：整合Mybatis自动生成代码的插件 -->
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>${mybatis-generator.version}</version>
                <!-- 添加一个mysql的依赖,防止等会找不到driverClass -->
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql-connector.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
                <!-- mybatisGenerator 的配置 -->
                <configuration>
                    <!-- generator 工具配置文件的位置 -->
                    <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
                    <!-- 是否覆盖 -->
                    <!-- 此处要特别注意,如果不加这个设置会导致每次运行都会在原目录再次创建-->
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>
            <plugin>
                <!-- MavenPlugin：项目打包时会使用 -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>