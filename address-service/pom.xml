<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.hiwan.web</groupId>
        <artifactId>web-project</artifactId>
        <version>1.0</version>
    </parent>
    <groupId>com.hiwan.address</groupId>
    <artifactId>address-service</artifactId>
    <version>0.0.1</version>
    <name>address-service</name>
    <packaging>jar</packaging>
    <description>Demo project for Spring Boot</description>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
        <springboot.version>2.4.3</springboot.version>
        <java.version>1.8</java.version>
        <fastjson.version>1.2.46</fastjson.version>
        <springloaded.version>1.2.8.RELEASE</springloaded.version>
        <mysql-connector.version>8.0.19</mysql-connector.version>
        <druid.version>1.1.11</druid.version>
        <HikariCP.version>2.7.8</HikariCP.version>
        <mybatis.spring.boot.version>1.3.1</mybatis.spring.boot.version>
        <pagehelper.version>1.2.3</pagehelper.version>
        <lombok.version>1.18.12</lombok.version>
        <junit.version>4.13</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <mybatis-generator.version>1.3.5</mybatis-generator.version>
        <!-- 打包时，路过测试类-->
        <skipTests>true</skipTests>
        <!-- maven方式跳过maven test, 等同$ mvn package -Dmaven.test.skip=true -->
        <!-- <maven.test.skip>true</maven.test.skip> -->
        <!-- surefire plugin方式跳过maven test， 等同$ mvn package -DskipTests -->
    </properties>
    <!-- 公共依赖-->
    <build>
        <!--resources配置解决mybatis 的mapperXml配置在java路径不被扫描的问题 -->
        <resources>
            <resource>
                <!-- mapper.xml文件在java目录下 -->
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                    <include>**/*.yml</include>
                </includes>
            </resource>
            <resource>
                <!-- mapper.xml文件在resources目录下-->
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.txt</include>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                    <include>**/*.yml</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- mybatis generator 自动生成代码插件 -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>${mybatis-generator.version}</version>
                <configuration>
                    <!--指定配置文件的名称。默认值:${basedir}/src/main/resources/generatorConfig.xml-->
                    <configurationFile>${basedir}/src/main/resources/generatorConfig.xml</configurationFile>
                    <!--如果指定了该参数，如果生成的java文件存在已经同名的文件，新生成的文件会覆盖原有的文件。
                    如果没有指定该参数，如果存在同名的文件，MBG会给新生成的代码文件生成一个唯一的名字(例如： MyClass.java.1, MyClass.java.2 等等)。
                    重要: 生成器一定会自动合并或覆盖已经生成的XML文件。默认值:false-->
                    <overwrite>true</overwrite>
                    <!--如果指定该参数，执行过程会输出到控制台-->
                    <verbose>true</verbose>
                </configuration>
                <dependencies>
                    <dependency>
                        <!-- MysqlConnector：导入Mysql驱动包 -->
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql-connector.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!--跳过测试 -->
        </plugins>
    </build>
</project>
