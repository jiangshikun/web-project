#==================================
# 启动显示信息 相关配置
#----------------------------------
#spring.banner.charset=utf-8
#spring.banner.location=classpath:banner.txt
#spring.banner.image.location=classpath:static/images/canvas.png
#spring.banner.image.width=50
#spring.banner.image.height=50
#spring.banner.image.margin=10

#==================================
# servlet 相关配置
#----------------------------------
server.port=8080
# 设置项目路径。默认是“/”
server.servlet.context-path=/
# 设置session超时时间。单位为秒
server.servlet.session.timeout=1800

#==================================
# 日志 相关配置
#----------------------------------
# 日志配置方式。配置总体的日志级别和对应包的日志级别.使用logging.level开头即可
logging.level.root=INFO
logging.level.org.springframework.web=ERROR
logging.level.com.hiwan.address=DEBUG

#==================================
# devtools 相关设置
#----------------------------------
# 关闭日志记录中显示自动配置的项目修改
spring.devtools.restart.log-condition-evaluation-delta=false
# 默认的不自动重启目录有（修改后会自动加载）：
# /META-INF/maven, /META-INF/resources, /resources, /static, /public, or /templates
# 如果想保留默认配置，只添加新目录。
#spring.devtools.restart.additional-exclude=html/*
# 覆盖默认配置
#spring.devtools.restart.exclude=static/**,public/**
# 配置类路径以外的文件修改后自动重启
#spring.devtools.restart.additional-paths=c:\restart.txt
# 配置特点文件的修改后，才自动重启
#spring.devtools.restart.trigger-file=
# 是否禁用重启功能。即使设置为false,仍然会初始化restart类加载器。通过java设置系统属性来禁止初始化restart
spring.devtools.restart.enabled=true

#==================================
# 数据库连接池 相关设置
#----------------------------------
# datasource后面如果不接连接池配置，则是公共的配置；加上连接池名称可以设置连接池的特有配置
# 建议省略数据库驱动类，spring boot可以根据url判断出数据库类型
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.url=jdbc:mysql://192.168.74.10:3306/xudl?characterEncoding=utf8&autoReConnect=true&useSSL=false
# spring.datasource.username=xudl
# spring.datasource.password=123456

# 数据库访问配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mobcc?useUnicode=true&characterEncoding=gbk&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.logSlowSql=true

mybatis.type-aliases-package=com.hiwan.address.entity
#mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath*:/com/hiwan/address/dao/*.xml
mapper.mappers=com.hiwan.address.dao.*
# #分页配置
pagehelper.helper-dialect=mysql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
pagehelper.params.count=countSql

#==================================
# HiKariCP连接池 相关设置
#----------------------------------
# hikari连接池的参数。（Tomcat pooling使用tomcat，dbcp2使用dbcp2）
# 定义获取连接的超时时间。最小250ms,默认30s
spring.datasource.hikari.connectionTimeout=10000
# 定义连接空闲时间。最小10s,默认10m
spring.datasource.hikari.idleTimeout=50000
# 定义最小的空闲连接数。推荐不设置。或与最大连接数一致；保持固定的连接数目
spring.datasource.hikari.minimumIdle=100
# 定义最大的连接数。默认10
spring.datasource.hikari.maximumPoolSize=100
# 定义连接的最大生命周期。推荐设置该属性。最小30s，默认30m
# spring.datasource.hikari.maxLifeTime=600000
# 从连接池获取到连接后，进行检查的查询语句。推荐设置该属性。默认值为none
spring.datasource.hikari.connectionTestQuery=select 1

#==================================
# Redis 相关设置
#----------------------------------
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址。如果配置了集群，则集群的配置会覆盖host设置的地址
#spring.redis.cluster.nodes=192.168.1.72:7001,192.168.1.72:7002,192.168.1.72:7003,192.168.1.72:7004,192.168.1.72:7005,192.168.1.72:7006
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
#spring.redis.password=

#------哨兵配置----------------------------------
# 设置哨兵配置中设置的监控名称
#spring.redis.sentinel.master=mymaster
# 启动的哨兵服务器端口。哨兵通常配置为奇数个
# 配置了哨兵模式，就不需要配置直接连接的redis端口信息了
#spring.redis.sentinel.nodes=192.168.1.72:7001,192.168.1.72:7002,192.168.1.72:7003

#------连接池配置----------------------------------
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=100
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=1000
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=100
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=100
# 连接超时时间（毫秒）
spring.redis.timeout=1000

#==================================
# Spring Cache 相关设置
#----------------------------------

# 配置redis cache
# 配置缓存的前缀。如果不配置，则会使用@CacheConfig中的cacheNames+冒号+配置的key的值作为redis的key
# @Cacheable中配置的cacheNames会覆盖@CacheConfig中的cacheNames
spring.cache.redis.key-prefix=address_cache_
# 配置缓存的失效时间。单位秒
spring.cache.redis.time-to-live=36000

# 使用redis实现session共享
spring.session.store-type=redis
# 定义写入redis的时机
spring.session.redis.flush-mode=IMMEDIATE
spring.session.redis.namespace=spring:session
# 定义session的超时时间
# server.servlet.session.timeout=1200